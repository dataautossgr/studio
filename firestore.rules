rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Manages general helper functions.
     */
    function isSignedIn() {
      return request.auth != null;
    }

    /**
     * @description Checks if the current user is the owner of the resource.
     */
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    /**
     * @description Checks if the current user is the owner of the resource and the resource exists.
     */
    function isExistingOwner(userId) {
      return isOwner(userId) && resource != null;
    }

    /**
     * @description Allows anyone to list items.
     */
    function canList() {
        return true;
    }
    /**
     * @description Stores product information.
     * @path /products/{productId}
     * @allow (get, list): Any user can read product data.
     * @allow (create): Any authenticated user can create a product.
     * @allow (update, delete): Any authenticated user can modify/delete a product.
     * @deny (create, update, delete): Non-authenticated users cannot modify data.
     * @principle Open read access, authenticated write access.
     */
    match /products/{productId} {
      allow get: if true;
      allow list: if canList();
      allow create: if isSignedIn();
      allow update: if isSignedIn();
      allow delete: if isSignedIn();
    }

    /**
     * @description Stores sale transaction information.
     * @path /sales/{saleId}
     * @allow (get, list): Any user can read sale data.
     * @allow (create): Any authenticated user can create a sale.
     * @allow (update, delete): Any authenticated user can modify/delete a sale.
     * @deny (create, update, delete): Non-authenticated users cannot modify data.
     * @principle Open read access, authenticated write access.
     */
    match /sales/{saleId} {
      allow get: if true;
      allow list: if canList();
      allow create: if isSignedIn();
      allow update: if isSignedIn();
      allow delete: if isSignedIn();
    }

    /**
     * @description Stores individual items within a sale.
     * @path /sale_items/{saleItemId}
     * @allow (get, list): Any user can read sale item data.
     * @allow (create): Any authenticated user can create a sale item.
     * @allow (update, delete): Any authenticated user can modify/delete a sale item.
     * @deny (create, update, delete): Non-authenticated users cannot modify data.
     * @principle Open read access, authenticated write access.
     */
    match /sale_items/{saleItemId} {
      allow get: if true;
      allow list: if canList();
      allow create: if isSignedIn();
      allow update: if isSignedIn();
      allow delete: if isSignedIn();
    }

    /**
     * @description Stores dealer/supplier information.
     * @path /dealers/{dealerId}
     * @allow (get, list): Any user can read dealer data.
     * @allow (create): Any authenticated user can create a dealer.
     * @allow (update, delete): Any authenticated user can modify/delete a dealer.
     * @deny (create, update, delete): Non-authenticated users cannot modify data.
     * @principle Open read access, authenticated write access.
     */
    match /dealers/{dealerId} {
      allow get: if true;
      allow list: if canList();
      allow create: if isSignedIn();
      allow update: if isSignedIn();
      allow delete: if isSignedIn();
    }

    /**
     * @description Stores purchase information from dealers.
     * @path /purchases/{purchaseId}
     * @allow (get, list): Any user can read purchase data.
     * @allow (create): Any authenticated user can create a purchase.
     * @allow (update, delete): Any authenticated user can modify/delete a purchase.
     * @deny (create, update, delete): Non-authenticated users cannot modify data.
     * @principle Open read access, authenticated write access.
     */
    match /purchases/{purchaseId} {
      allow get: if true;
      allow list: if canList();
      allow create: if isSignedIn();
      allow update: if isSignedIn();
      allow delete: if isSignedIn();
    }

    /**
     * @description Stores customer information.
     * @path /customers/{customerId}
     * @allow (get, list): Any user can read customer data.
     * @allow (create): Any authenticated user can create a customer.
     * @allow (update, delete): Any authenticated user can modify/delete a customer.
     * @deny (create, update, delete): Non-authenticated users cannot modify data.
     * @principle Open read access, authenticated write access.
     */
    match /customers/{customerId} {
      allow get: if true;
      allow list: if canList();
      allow create: if isSignedIn();
      allow update: if isSignedIn();
      allow delete: if isSignedIn();
    }

    /**
     * @description Stores daily cash session information.
     * @path /cash_sessions/{cashSessionId}
     * @allow (get, list): Any user can read cash session data.
     * @allow (create): Any authenticated user can create a cash session.
     * @allow (update, delete): Any authenticated user can modify/delete a cash session.
     * @deny (create, update, delete): Non-authenticated users cannot modify data.
     * @principle Open read access, authenticated write access.
     */
    match /cash_sessions/{cashSessionId} {
      allow get: if true;
      allow list: if canList();
      allow create: if isSignedIn();
      allow update: if isSignedIn();
      allow delete: if isSignedIn();
    }

    /**
     * @description Stores bank transaction information.
     * @path /bank_transactions/{bankTransactionId}
     * @allow (get, list): Any user can read bank transaction data.
     * @allow (create): Any authenticated user can create a bank transaction.
     * @allow (update, delete): Any authenticated user can modify/delete a bank transaction.
     * @deny (create, update, delete): Non-authenticated users cannot modify data.
     * @principle Open read access, authenticated write access.
     */
    match /bank_transactions/{bankTransactionId} {
      allow get: if true;
      allow list: if canList();
      allow create: if isSignedIn();
      allow update: if isSignedIn();
      allow delete: if isSignedIn();
    }

    /**
     * @description Stores system settings.
     * @path /settings/{settingId}
     * @allow (get, list): Any user can read setting data.
     * @allow (create): Any authenticated user can create a setting.
     * @allow (update, delete): Any authenticated user can modify/delete a setting.
     * @deny (create, update, delete): Non-authenticated users cannot modify data.
     * @principle Open read access, authenticated write access.
     */
    match /settings/{settingId} {
      allow get: if true;
      allow list: if canList();
      allow create: if isSignedIn();
      allow update: if isSignedIn();
      allow delete: if isSignedIn();
    }

    /**
     * @description Stores customer payment information.
     * @path /payments/{paymentId}
     * @allow (get, list): Any user can read payment data.
     * @allow (create): Any authenticated user can create a payment.
     * @allow (update, delete): Any authenticated user can modify/delete a payment.
     * @deny (create, update, delete): Non-authenticated users cannot modify data.
     * @principle Open read access, authenticated write access.
     */
    match /payments/{paymentId} {
      allow get: if true;
      allow list: if canList();
      allow create: if isSignedIn();
      allow update: if isSignedIn();
      allow delete: if isSignedIn();
    }

    /**
     * @description Stores repair job information.
     * @path /repair_jobs/{jobId}
     * @allow (get, list): Any user can read repair job data.
     * @allow (create): Any authenticated user can create a repair job.
     * @allow (update, delete): Any authenticated user can modify/delete a repair job.
     * @deny (create, update, delete): Non-authenticated users cannot modify data.
     * @principle Open read access, authenticated write access.
     */
    match /repair_jobs/{jobId} {
      allow get: if true;
      allow list: if canList();
      allow create: if isSignedIn();
      allow update: if isSignedIn();
      allow delete: if isSignedIn();
    }

    /**
     * @description Stores items for a specific repair job.
     * @path /repair_job_items/{jobItemId}
     * @allow (get, list): Any user can read repair job item data.
     * @allow (create): Any authenticated user can create a repair job item.
     * @allow (update, delete): Any authenticated user can modify/delete a repair job item.
     * @deny (create, update, delete): Non-authenticated users cannot modify data.
     * @principle Open read access, authenticated write access.
     */
    match /repair_job_items/{jobItemId} {
      allow get: if true;
      allow list: if canList();
      allow create: if isSignedIn();
      allow update: if isSignedIn();
      allow delete: if isSignedIn();
    }
  }
}